"use strict";(self.webpackChunkgotchas=self.webpackChunkgotchas||[]).push([[4076],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return y}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(n),y=a,f=m["".concat(c,".").concat(y)]||m[y]||u[y]||o;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3765:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},assets:function(){return s},toc:function(){return u},default:function(){return y}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={slug:"python-mypy-config",title:"mypy Configurations",authors:"keatmin",tags:["python","mypy"]},c=void 0,p={permalink:"/daily_gotchas/gotchas/python-mypy-config",source:"@site/gotchas/2021-08-01-mypy-config.md",title:"mypy Configurations",description:"mypy usually doesn't check types inside the function scope but generally in module scope, hence:",date:"2021-08-01T00:00:00.000Z",formattedDate:"August 1, 2021",tags:[{label:"python",permalink:"/daily_gotchas/gotchas/tags/python"},{label:"mypy",permalink:"/daily_gotchas/gotchas/tags/mypy"}],readingTime:.81,truncated:!1,authors:[{name:"keatmin",title:"Data nerd",url:"https://github.com/keatmin",imageURL:"https://github.com/keatmin.png",key:"keatmin"}],prevItem:{title:"Assuming role in AWS",permalink:"/daily_gotchas/gotchas/aws-iam-assume-role"},nextItem:{title:"Docker Security",permalink:"/daily_gotchas/gotchas/docker-security"}},s={authorsImageUrls:[void 0]},u=[],m={toc:u};function y(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"mypy usually doesn't check types inside the function scope but generally in module scope, hence:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# module scope that will make mypy scream\nx = 5\nprint(x + "hello")\n\n# Function scope that will pass mypy checks if there is no type hints\ndef foo():\n    x = 5\n    print(x + "hello")\n\n\ndef foo(x: int):\n    x = 5\n    print(x + "hello")\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"To allow checking inside function, adding ",(0,o.kt)("inlineCode",{parentName:"p"},"check_untyped_defs")," will make mypy check the function scope that doesn't have type hints.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"This is useful because if we are migrating a codebase to start using type hints, then this will start with checking all the types within a function and we can start solving from there.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"One other feature to add after ",(0,o.kt)("inlineCode",{parentName:"p"},"check_untyped_defs")," is to add ",(0,o.kt)("inlineCode",{parentName:"p"},"disallow_untyped_defs")," so that mypy will make sure that there's no functions with no type hints"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title='pyproject.toml'",title:"'pyproject.toml'"},"[tool.mypy]\ncheck_untyped_defs = true\ndisallow_untyped_defs = true\n")),(0,o.kt)("p",null,"Other notable config:\n",(0,o.kt)("inlineCode",{parentName:"p"},"disallow_incomplete_defs")),(0,o.kt)("p",null,"Source:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=Rk-Y71P_9KE"},"Asottile's")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://mypy.readthedocs.io/en/stable/config_file.html"},"mypy"))))}y.isMDXComponent=!0}}]);