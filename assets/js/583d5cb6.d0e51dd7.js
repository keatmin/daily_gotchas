"use strict";(self.webpackChunkgotchas=self.webpackChunkgotchas||[]).push([[3431],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),f=p(n),m=o,y=f["".concat(l,".").concat(m)]||f[m]||u[m]||i;return n?r.createElement(y,a(a({ref:t},s),{},{components:n})):r.createElement(y,a({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},4494:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return p},assets:function(){return s},toc:function(){return u},default:function(){return m}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],c={slug:"python-pytest-mock",title:"Pytest Mock",authors:"keatmin",tags:["python","pytest"]},l=void 0,p={permalink:"/daily_gotchas/gotchas/python-pytest-mock",source:"@site/gotchas/2021-07-08-pytest-mock.md",title:"Pytest Mock",description:"Unit testing on a function whether an exception is properly raised",date:"2021-07-08T00:00:00.000Z",formattedDate:"July 8, 2021",tags:[{label:"python",permalink:"/daily_gotchas/gotchas/tags/python"},{label:"pytest",permalink:"/daily_gotchas/gotchas/tags/pytest"}],readingTime:.455,truncated:!1,authors:[{name:"keatmin",title:"Data nerd",url:"https://github.com/keatmin",imageURL:"https://github.com/keatmin.png",key:"keatmin"}],prevItem:{title:"Git Merge PR",permalink:"/daily_gotchas/gotchas/git-merge-pr"},nextItem:{title:"LRU cache",permalink:"/daily_gotchas/gotchas/python-lru-cache"}},s={authorsImageUrls:[void 0]},u=[{value:"Unit testing on a function whether an exception is properly raised",id:"unit-testing-on-a-function-whether-an-exception-is-properly-raised",children:[]}],f={toc:u};function m(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"unit-testing-on-a-function-whether-an-exception-is-properly-raised"},"Unit testing on a function whether an exception is properly raised"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Using ",(0,i.kt)("inlineCode",{parentName:"li"},"pytest.raises"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"import pytest\n\ndef test_func_division_error():\n    with pytest.raises(ZeroDivisionError):\n        9/0\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"To allow an exception to be raised, the decorator ",(0,i.kt)("inlineCode",{parentName:"li"},"@pytest.mark.xfail(raise=ZeroDivisionError)")," can be used. However note that it is only allowing ",(0,i.kt)("inlineCode",{parentName:"li"},"ZeroDivisionError")," to be raised and not testing whether the func will raise an Exception.")),(0,i.kt)("p",null,"Additional Tips from @jianshen92:\nIf mocking a function and expect the function to throw error:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'with patch("function_to_mock") as f:\n  f.side_effect = ZeroDivisionError\n')),(0,i.kt)("p",null,"Useful when function has a third party call"))}m.isMDXComponent=!0}}]);